generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  username  String    @unique
  password  String
  firstname String
  lastname  String?
  DOB       DateTime
  comments  Comment[]
  solved    Solve[]
}

model Solve {
  id            String    @id @default(uuid())
  success       Boolean
  error         String?
  code          String
  language      String    @default("cpp")
  date          DateTime  @default(now())
  problemId     String
  userId        String
  testsPassed   Int?      @default(0)
  totalTests    Int?      @default(0)
  executionTime Int?      @default(0)
  submittedAt   DateTime? @default(now())
  problem       Problem   @relation(fields: [problemId], references: [id])
  user          User      @relation(fields: [userId], references: [id])
}

model Problem {
  id          String          @id @default(uuid())
  title       String
  description String
  difficulty  String          @default("Easy")
  constraints String          @default("")
  inputtype   String          @default("")
  comments    Comment[]
  tags        ProblemToTags[]
  solves      Solve[]
  testCases   TestCase[]
}

model ProblemToTags {
  id      String       @id @default(uuid())
  pid     String
  tid     String
  problem Problem      @relation(fields: [pid], references: [id])
  tag     Problem_Tags @relation(fields: [tid], references: [id])

  @@unique([pid, tid])
}

model Problem_Tags {
  id       String          @id @default(uuid())
  tagName  String
  problems ProblemToTags[]
}

model TestCase {
  id        String  @id @default(uuid())
  input     String
  output    String
  problemId String
  problem   Problem @relation(fields: [problemId], references: [id])
}

model Comment {
  id        String  @id @default(uuid())
  title     String
  body      String
  problemId String
  userId    String
  problem   Problem @relation(fields: [problemId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
}
